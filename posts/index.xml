<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Matthew's Blag</title><link>https://matthew.nz/posts/</link><description>Recent content in Posts on Matthew's Blag</description><generator>Hugo -- gohugo.io</generator><language>en-nz</language><lastBuildDate>Thu, 16 Nov 2017 20:43:52 +1300</lastBuildDate><atom:link href="https://matthew.nz/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Wifi Tricks and the Secret to Endless Airport Internet</title><link>https://matthew.nz/posts/airport-wifi/</link><pubDate>Thu, 16 Nov 2017 20:43:52 +1300</pubDate><guid>https://matthew.nz/posts/airport-wifi/</guid><description>While I was in Airport, I had a time limit on my Wifi which I used up too fast. So now all I&amp;rsquo;ve got on my mind is the challenge of getting back onto the internet.
Who limits Wifi anyway? What are we? Savages?
In this case I didn&amp;rsquo;t have to do much because I had a snippet of code I took from my old workmate Steve Purcell. It&amp;rsquo;s sole purpose is to generate a random Mac address, and make that callable from the zsh shell.</description></item><item><title>Encrypted Directories</title><link>https://matthew.nz/posts/crypto-directories/</link><pubDate>Sat, 03 Jun 2017 18:24:40 +1200</pubDate><guid>https://matthew.nz/posts/crypto-directories/</guid><description>In the *nix ecosystem, there are a lot of tools that are great to chain together. I&amp;rsquo;d encourage everyone to learn their tools, but sometimes the tools are complex, and you only want to do something simple.
I keep forgetting how to crypto. What I generally want to do is encrypt and sign a directory, then pull that same directory later.
Here&amp;rsquo;s the script I threw together today. It takes one argument, either a directory to encrypt, or a gnupg encrypted tar gzipped directory and extracts it.</description></item><item><title>Peer to Peer Git</title><link>https://matthew.nz/posts/peer-to-peer-git/</link><pubDate>Fri, 31 Mar 2017 17:37:49 +1300</pubDate><guid>https://matthew.nz/posts/peer-to-peer-git/</guid><description>Sometimes your central git repository goes down, but you need to share code. That&amp;rsquo;s a bummer, you can commit and wait, but you&amp;rsquo;ve likely heard that you shouldn&amp;rsquo;t need to rely on a central repo.
So you&amp;rsquo;ve got a few options here:
Mirror your repo someplace else and switch upstreams during outages, email your stuff as patches using [git am][2], [2]: https://git-scm.com/docs/git-am setup a small read only local git server and pull between neighbours, or use some kind of highly available decentralised storage as an upstream like [ipfs git][4].</description></item><item><title>CTags in Ruby: Make code feel like a wiki</title><link>https://matthew.nz/posts/ctags-ruby/</link><pubDate>Tue, 21 Feb 2017 08:49:22 +1300</pubDate><guid>https://matthew.nz/posts/ctags-ruby/</guid><description>In a browser you markup for links. A wiki builds on this behavior to describes topics, linking nouns to pages in context that link to other nown pages.
Browsing a wiki allows you to dive into information and build up your mental model of a subject area&amp;ndash; which is kind of addictive. So why can&amp;rsquo;t we do the same thing in our code?
Code has syntax which are just links between files.</description></item><item><title>Handles in 2016</title><link>https://matthew.nz/posts/handles-in-2016/</link><pubDate>Fri, 23 Sep 2016 16:51:31 +1300</pubDate><guid>https://matthew.nz/posts/handles-in-2016/</guid><description>For years I used the name &amp;ldquo;Daemons Advocate&amp;rdquo;. I don&amp;rsquo;t know why, but at some stage I stopped liking it. This got tricky, anytime I get to know a name I start to dislike it.
Picking a handle is too hard. And everything I came up with is taken by some other schmo on the internets because if you&amp;rsquo;re looking for a good short name in 2016, you&amp;rsquo;re way late to the party.</description></item></channel></rss>